//====================================================================================================
.hello {
  padding: 38px 0px 70px 0px;
  @media (max-width: $md1+px) {
    // уберем вообще отступ сверху
    padding: 0px 0px 70px 0px;
  }
  @media (max-width: $md3+px) {
    padding: 0px 0px 60px 0px;
  }
  // .hello__container

  &__container {
    display: flex;
    @media (max-width: $md3+px) {
      text-align: center;
      flex-direction: column-reverse;
    }
  }

  // .hello__content
  // это флекс контейнер
  &__content {
    align-items: flex-start; /* то есть принудительно прижать их к верху, не смотря на то что у нас и до этого все было ок, почему? Потому что по умолчанию мы знаем что флекс элементы работают со значением stretch у align-items и они стремятся растянуться, то есть картинка стремилась растянуться по большому тексту и что бы обезопасить себя на изменение какого то контента и что бы ничего не случилось,то такие вещи стоит делать. */
    padding: 18px 110px 0px 0px;
    flex: 1 1 auto; /* разрешаем увеичиваться, уменьшаться и ширина автоматически, что позволяет нашей контентной части занимать и придавливать изображение которое имеет у нас фиксированый размер */
    *:last-child {
      /* это означает что у любого тега последнего кот. находится последний в дереве DOM - мы убираем отступы. */
      margin-bottom: 0;
    }

    // hello__content
    @media (max-width: $md1+px) {
      // Уменьшаем правый оступ при 1-ом брейкпоинте.
      padding: 18px 50px 0px 0px;
    }
    @media (max-width: $md3+px) {
      padding: 0px 0px 0px 0px;
    }
  }

  // .hello__title

  &__title {
    margin: 0px 0px 25px 0px; /* делаем на глаз так как там гораздо меньше чем в макете 40px. */
    @media (max-width: $md3+px) {
      margin: 0px 0px 20px 0px;
    }
  }

  // .hello__text

  &__text {
    margin: 0px 0px 35px 0px;
    @media (max-width: $md3+px) {
      padding: 0 15px;
      margin: 0px 0px 25px 0px;
    }
  }

  // .hello__btn

  &__btn {
    margin: 0px 0px 25px 0px;
    @media (max-width: $md3+px) {
      // на всякий случай
      margin: 0px 0px 20px 0px;
    }
  }

  // .__avatar

  &__avatar {
    flex: 0 0 243px; /* для фиксированых колонок мы запрещаем увеличиваться(первый 0), уменьшаться(второй 0), и устанавливаем фиксированую ширину 243px; */
    height: 243px;
    border-radius: 50%;
    overflow: hidden;
    box-shadow: -5px 13px 0px 0px #edf7fa;
    img {
      max-width: 100%;
    }
    @media (max-width: $md3+px) {
      width: 170px;
      height: 170px;
      margin: 0px 0px 40px 0px; /* визуально у нас ничего не поменялось, у нас есть изображение кот. задан margin вниз и если не будет изображения то у нас не будет лишних висячих отступов перед контентом. */
    }
  }
}
//====================================================================================================
//
.recent-posts {
  background: #edf7fa;
  padding: 25px 0px 13px 0px;
  @media (max-width: $md3+px) {
    padding: 25px 0px 23px 0px;
  }
  // .recent-posts__container

  &__container {
  }

  // .recent-posts__header

  &__header {
    display: flex;
    margin: 0px 0px 20px 0px;
  }

  // .recent-posts__title

  &__title {
    padding: 0px 20px 0px 0px;
    flex: 1 1 auto; /* это можно написать вместо space-between. Он позволяем ему увеличиваться, он берет и толкает View all в другой конец. */
    font-size: 22px;
  }

  // .recent-posts__view-all

  &__view-all {
    flex: 0 0 auto; /* мы запретили уменьшаться объекту. */
    font-size: 16px;
    line-height: 23px;
    color: #00a8cc;
    @media (max-width: $md3+px) {
      display: none;
    }
  }

  // .recent-posts__items

  &__items {
    margin: 0 -10px; /* как сделать отступ 20px, мы просто раздвигаем по 10px. */
    @media (min-width: $md3+px) {
      display: flex;
    }
  }

  // .recent-posts__column

  &__column {
    flex: 0 1 50%;
    padding: 0 10px;
    margin: 0px 0px 17px 0px;
  }

  // .recent-posts__item

  &__item {
  }
}
.recent-post {
  height: 100%; /* что бы полностью растягивался контент если в колонке добавлять текст. */
  padding: 20px;
  background: #ffffff;
  box-shadow: 0px 4px 10px rgba(187, 225, 250, 0.25);
  border-radius: 4px;
  @media (max-width: $md3+px) {
    padding: 15px;
  }
  *:last-child {
    margin-bottom: 0;
  }

  // .recent-post__title
  &__title {
    display: inline-block;
    color: inherit;
    font-weight: 700;
    font-size: 26px;
    line-height: 38 / 26 * 100%;
    transition: color 0.3s ease 0s;
    margin: 0px 0px 17px 0px;
    @media (min-width: $md2+px) {
      &:hover {
        color: #ff6464;
      }
    }
    @media (max-width: $md3+px) {
      font-size: 22px;
      margin: 0px 0px 10px 0px;
    }
  }

  // .recent-post__info

  &__info {
    margin: 0px 0px 15px 0px;
    font-size: 18px;
    line-height: 26 / 18 * 100%;
    span {
      margin: 0 10px; /* так как span строчный то можно margin только по бокам. */
    }
    @media (max-width: $md3+px) {
      font-size: 16px;
      margin: 0px 0px 10px 0px;
    }
  }

  // .recent-post__text

  &__text {
    margin: 0px 0px 15px 0px;
  }
}
//====================================================================================================
.featured-works {
  padding: 30px 0px 80px 0px;
  @media (max-width: $md3+px) {
    padding: 30px 0px 30px 0px;
  }
  // .featured-works__container

  &__container {
  }

  // .featured-works__title

  &__title {
    margin: 0px 0px 20px 0px;
  }
  // .featured-works__items
  &__items {
    @media (max-width: $md3+px) {
      display: flex;
      overflow: auto; /* что бы скролить без подключения свайпа.Без использования js*/
      // Мы используем overflow: auto; и все остальные стили только на главной странице и исключаем их на отдельной странице, для того что бы все работало.
      .works__item {
        // наша задача такая, что мы видим 1 объект но и видим что там есть еще объекты, потому что даже если предусмотрен слайдер (боковой скрол), то пользователь не может догадаться что там есть еще работы.
        flex: 0 0 80%;
        margin: 0px 15px 0px 0px;
      }
    }
  }
}
